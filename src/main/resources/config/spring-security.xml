<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.1.xsd">
 
 <!-- 配置不过滤的资源（静态资源及登录相关） -->
    <http pattern="/resources/**" security="none"/>
    <http pattern="/login/*" security="none"/>
    <http pattern="/open/*" security="none"/>  
 
 	<http auto-config="false"  entry-point-ref="chanceAuthenticationEntryPoint" access-denied-page="/login/403.htm">
	 		<intercept-url pattern="/admin/*" access="ROLE_ADMIN"/>
	       	<intercept-url pattern="/pro/search.htm" access="ROLE_APPROVAL,ROLE_INVESTOR"/>
	       	<intercept-url pattern="/pro/pro_audit.htm" access="ROLE_APPROVAL"/>
	       	<intercept-url pattern="/pro/pro_view.htm" access="ROLE_INVESTOR"/>
	    	<intercept-url pattern="/**" access="ROLE_USER"/>  <!-- 表示访问任何资源都需要普通用户权限  -->  
        	<!-- 登录过滤器 -->  
             <custom-filter before="FORM_LOGIN_FILTER" ref="loginFilter"/>  
             <!-- ajax登录过滤器 -->  
             <custom-filter position="FORM_LOGIN_FILTER" ref="ajaxLoginFilter"/>  
             <!-- 注销过滤器 -->  
             <logout logout-url="/logout" logout-success-url="/login/login.htm" />  
             <http-basic />
    </http>  
     
    <beans:bean id="chanceAuthenticationEntryPoint" class="com.driverdata.chenxi.security.ChanceAuthenticationEntryPoint">
        <beans:property name="loginFormUrl" value="/login/login.htm" />  <!-- 权限验证失败后跳转页面  -->
    </beans:bean>  
    
      <!-- 验证普通用户 -->    
    <beans:bean id="loginFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">  
        <beans:property name="authenticationManager" ref="authenticationManager"/>  
        <beans:property name="authenticationFailureHandler" ref="failureHandler"/>  
        <beans:property name="authenticationSuccessHandler" ref="successHandler"/>  
        <beans:property name="filterProcessesUrl" value="/loginProcess"/>  <!-- 登录url -->
    </beans:bean>  
  
    <beans:bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">  
        <beans:property name="defaultFailureUrl" value="/login/login.htm?error=true" />  <!-- 登录失败跳转url -->
    </beans:bean>  
  
    <beans:bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">  
        <beans:property name="alwaysUseDefaultTargetUrl" value="false"/>  
        <beans:property name="defaultTargetUrl" value="/index.htm"/>  <!-- 登录成功跳转url -->
    </beans:bean>  
    
    <!-- 验证ajax请求-->   
    <beans:bean id="ajaxLoginFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">  
        <beans:property name="authenticationManager" ref="authenticationManager"/>  
        <beans:property name="authenticationFailureHandler" ref="ajaxFailureHandler"/>  
        <beans:property name="authenticationSuccessHandler" ref="ajaxSuccessHandler"/>  
        <beans:property name="filterProcessesUrl" value="/ajaxLoginProcess"/>
        <beans:property name="postOnly" value="false"/>  
    </beans:bean>  
      
    <beans:bean id="ajaxFailureHandler" class="com.driverdata.chenxi.security.AjaxAuthenticationFailureHandler">
    </beans:bean>  
      
    <beans:bean id="ajaxSuccessHandler" class="com.driverdata.chenxi.security.AjaxAuthenticationSuccessHandler">
    </beans:bean>  
 
    
    <authentication-manager alias="authenticationManager">
	    <authentication-provider user-service-ref="securityManager">
	    	<password-encoder hash="md5" />
	    </authentication-provider>
    </authentication-manager>
    
    <beans:bean id="securityManager"  
        class="com.driverdata.chenxi.security.SecurityManagerBoImpl">
    </beans:bean>
    
    
    <!--<beans:bean id="concurrencyFilter"
        class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <beans:property name="sessionRegistry" ref="sessionRegistry" />
        <beans:property name="expiredUrl" value="/login/login.htm" />
    </beans:bean> -->
    
      <!--SessionRegistry的默认实现，它会在spring应用上下文中监听SessionDestroyedEvents事件
    <beans:bean id="sessionRegistry"
        class="org.springframework.security.core.session.SessionRegistryImpl" /> -->
 
</beans:beans>